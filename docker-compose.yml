networks:
  default:
    driver: bridge

services:
  web:
    image: nginx:1.28.0-alpine3.21-perl
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - default
    depends_on:
      - sanoptes
      - grafana

  sanoptes:
    container_name: sanoptes
    build:
      context: ./backend
    restart: always
    #environment:
    #  PORT: 8000
    ports:
      - '0.0.0.0:8000:8000'
    expose:
      - 8000
    networks:
        default:
            aliases:
                - sanoptes.local

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    restart: always
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - './data/prometheus:/prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '0.0.0.0:9090:9090'
    expose:
      - 9090
    networks:
        default:
            aliases:
                - prometheus.local

  grafana:
    image: grafana/grafana-enterprise:11.5.2
    container_name: grafana
    restart: always
    environment:
      - GF_LOG_LEVEL=info
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_DEFAULT_THEME=light
    ports:
      - '0.0.0.0:3000:3000'
    volumes:
      - './data/grafana:/var/lib/grafana'
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
      - './grafana/alerting:/etc/grafana/provisioning/alerting'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
    networks:
        - default